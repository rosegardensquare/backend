<?xml version="1.0" encoding="UTF-8"?>
<configuration>

    <!-- 日志文件存放路径 -->
    <property name="log.path" value="./logs"/>
    <!-- 控制台输出 -->
    <appender name="console" class="ch.qos.logback.core.ConsoleAppender">
        <!--此日志appender是为开发使用，只配置最底级别，控制台输出的日志级别是大于或等于此级别的日志信息-->
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>debug</level>
        </filter>
        <encoder>
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} %level [%thread] [%file:%line] %m%n</pattern>
        </encoder>
    </appender>

    <appender name="debug_file" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!-- 正在记录的日志文件的路径及文件名 -->
        <file>${log.path}/log_debug.log</file>
        <!--日志文件输出格式-->
        <encoder>
            <!-- <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n</pattern>-->
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} %level [%thread] [%file:%line] %m%n</pattern>
            <charset>UTF-8</charset> <!-- 设置字符集 -->
        </encoder>
        <!-- 日志记录器的滚动策略，按日期，按大小记录 -->
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <fileNamePattern>${log.path}/debug/debug-%d{yyyy-MM-dd}/log-debug-%d{yyyy-MM-dd}.%i.log</fileNamePattern>
            <!-- 最多日志文件数，必须和CleanHistoryOnStart一起使用 -->
<!--            <cleanHistoryOnStart>true</cleanHistoryOnStart>-->
            <!-- 日志保留天数,超过自动删除 -->
            <maxHistory>30</maxHistory>
            <!-- 日志保留最大大小,超过自动删除 -->
            <totalSizeCap>5GB</totalSizeCap>
            <!-- 日志文件单个大小,超过自动切割 -->
            <maxFileSize>100KB</maxFileSize>
        </rollingPolicy>
        <!-- 此日志文件只记录debug级别的 -->
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>DEBUG</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
    </appender>

    <appender name="info_file" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!-- 正在记录的日志文件的路径及文件名 -->
        <file>${log.path}/log_info.log</file>
        <!--日志文件输出格式-->
        <encoder>
            <!-- <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n</pattern>-->
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} %level [%thread] [%file:%line] %m%n</pattern>
            <charset>UTF-8</charset>
        </encoder>
        <!-- 日志记录器的滚动策略，按日期，按大小记录 -->
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <fileNamePattern>${log.path}/info/info-%d{yyyy-MM-dd}/log-info-%d{yyyy-MM-dd}.%i.log</fileNamePattern>
            <!-- 最多日志文件数，必须和CleanHistoryOnStart一起使用 -->
<!--            <cleanHistoryOnStart>true</cleanHistoryOnStart>-->
            <!-- 日志保留天数,超过自动删除 -->
            <maxHistory>30</maxHistory>
            <!-- 日志保留最大大小,超过自动删除 -->
            <totalSizeCap>5GB</totalSizeCap>
            <!-- 日志文件单个大小,超过自动切割 -->
            <maxFileSize>100MB</maxFileSize>
        </rollingPolicy>
        <!-- 此日志文件只记录info级别的 -->
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>INFO</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
    </appender>

    <appender name="warn_file" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!-- 正在记录的日志文件的路径及文件名 -->
        <file>${log.path}/log_warn.log</file>
        <!--日志文件输出格式-->
        <encoder>
            <!-- <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n</pattern>-->
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} %level [%thread] [%file:%line] %m%n</pattern>
            <charset>UTF-8</charset> <!-- 此处设置字符集 -->
        </encoder>
        <!-- 日志记录器的滚动策略，按日期，按大小记录 -->
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <fileNamePattern>${log.path}/warn/warn-%d{yyyy-MM-dd}/log-warn-%d{yyyy-MM-dd}.%i.log</fileNamePattern>
            <!-- 最多日志文件数，必须和CleanHistoryOnStart一起使用 -->
<!--            <cleanHistoryOnStart>true</cleanHistoryOnStart>-->
            <!-- 日志保留天数,超过自动删除 -->
            <maxHistory>30</maxHistory>
            <!-- 日志保留最大大小,超过自动删除 -->
            <totalSizeCap>5GB</totalSizeCap>
            <!-- 日志文件单个大小,超过自动切割 -->
            <maxFileSize>100MB</maxFileSize>
        </rollingPolicy>
        <!-- 此日志文件只记录warn级别的 -->
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>WARN</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
    </appender>

    <appender name="error_file" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!-- 正在记录的日志文件的路径及文件名 -->
        <file>${log.path}/log_error.log</file>
        <!--日志文件输出格式-->
        <encoder>
            <!-- <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n</pattern>-->
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} %level [%thread] [%file:%line] %m%n</pattern>
            <charset>UTF-8</charset> <!-- 此处设置字符集 -->
        </encoder>
        <!-- 日志记录器的滚动策略，按日期，按大小记录 -->
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <fileNamePattern>${log.path}/error/error-%d{yyyy-MM-dd}/log-error-%d{yyyy-MM-dd}.%i.log</fileNamePattern>
            <!-- 最多日志文件数，必须和CleanHistoryOnStart一起使用 -->
<!--            <cleanHistoryOnStart>true</cleanHistoryOnStart>-->
            <!-- 日志保留天数,超过自动删除 -->
            <maxHistory>30</maxHistory>
            <!-- 日志保留最大大小,超过自动删除 -->
            <totalSizeCap>5GB</totalSizeCap>
            <!-- 日志文件单个大小,超过自动切割 -->
            <maxFileSize>100MB</maxFileSize>
        </rollingPolicy>
        <!-- 此日志文件只记录ERROR级别的 -->
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>ERROR</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
    </appender>

    <appender name="log_collect" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!-- 正在记录的日志文件的路径及文件名 -->
        <file>${log.path}/collect.log </file>
        <!--日志文件输出格式-->
        <encoder>
            <!-- <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n</pattern>-->
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} %level %m%n</pattern>
            <!--            <pattern>%m%n</pattern>-->
            <charset>UTF-8</charset> <!-- 此处设置字符集 -->
        </encoder>
        <!-- 日志记录器的滚动策略，按日期，按大小记录 -->
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <fileNamePattern>${log.path}/data/data-%d{yyyy-MM-dd}/collect-%d{yyyy-MM-dd}.%i.log</fileNamePattern>
            <!-- 最多日志文件数，必须和CleanHistoryOnStart一起使用 -->
            <cleanHistoryOnStart>true</cleanHistoryOnStart>
            <!-- 日志保留天数,超过自动删除 -->
            <maxHistory>30</maxHistory>
            <!-- 日志保留最大大小,超过自动删除 -->
            <totalSizeCap>5GB</totalSizeCap>
            <!-- 日志文件单个大小,超过自动切割 -->
            <maxFileSize>100MB</maxFileSize>
        </rollingPolicy>
        <!-- 此日志文件只记录ERROR级别的 -->
        <!--<filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>info</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>-->
    </appender>

    <appender name="log_collect_result" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!-- 正在记录的日志文件的路径及文件名 -->
        <file>${log.path}/collectResult.log</file>
        <!--日志文件输出格式-->
        <encoder>
            <!-- <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n</pattern>-->
            <!--            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} %level [%class:%line] %m%n</pattern>-->
            <pattern>%m%n</pattern>
            <charset>UTF-8</charset> <!-- 此处设置字符集 -->
        </encoder>
        <!-- 日志记录器的滚动策略，按日期，按大小记录 -->
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <fileNamePattern>${log.path}/data/data-%d{yyyy-MM-dd}/collectResult-%d{yyyy-MM-dd}.%i.log</fileNamePattern>
            <!-- 最多日志文件数，必须和CleanHistoryOnStart一起使用 -->
            <cleanHistoryOnStart>true</cleanHistoryOnStart>
            <!-- 日志保留天数,超过自动删除 -->
            <maxHistory>30</maxHistory>
            <!-- 日志保留最大大小,超过自动删除 -->
            <totalSizeCap>5GB</totalSizeCap>
            <!-- 日志文件单个大小,超过自动切割 -->
            <maxFileSize>100MB</maxFileSize>
        </rollingPolicy>
        <!-- 此日志文件只记录ERROR级别的 -->
        <!--<filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>info</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>-->
    </appender>
    <appender name="log_tcpserver" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!-- 正在记录的日志文件的路径及文件名 -->
        <file>${log.path}/tcpserver.log</file>
        <!--日志文件输出格式-->
        <encoder>
            <!-- <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n</pattern>-->
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} %level %m%n</pattern>
            <!--            <pattern>%m%n</pattern>-->
            <charset>UTF-8</charset> <!-- 此处设置字符集 -->
        </encoder>
        <!-- 日志记录器的滚动策略，按日期，按大小记录 -->
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <fileNamePattern>${log.path}/data/data-%d{yyyy-MM-dd}/tcpserver-%d{yyyy-MM-dd}.%i.log</fileNamePattern>
            <!-- 最多日志文件数，必须和CleanHistoryOnStart一起使用 -->
            <cleanHistoryOnStart>true</cleanHistoryOnStart>
            <!-- 日志保留天数,超过自动删除 -->
            <maxHistory>30</maxHistory>
            <!-- 日志保留最大大小,超过自动删除 -->
            <totalSizeCap>5GB</totalSizeCap>
            <!-- 日志文件单个大小,超过自动切割 -->
            <maxFileSize>100MB</maxFileSize>
        </rollingPolicy>
        <!-- 此日志文件只记录ERROR级别的 -->
        <!--<filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>info</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>-->
    </appender>
    <appender name="snmp_job" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!-- 正在记录的日志文件的路径及文件名 -->
        <file>${log.path}/snmp_job.log </file>
        <!--日志文件输出格式-->
        <encoder>
            <!-- <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n</pattern>-->
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} %level %m%n</pattern>
            <!--            <pattern>%m%n</pattern>-->
            <charset>UTF-8</charset> <!-- 此处设置字符集 -->
        </encoder>
        <!-- 日志记录器的滚动策略，按日期，按大小记录 -->
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <fileNamePattern>${log.path}/job/job-%d{yyyy-MM-dd}/snmpJob-%d{yyyy-MM-dd}.%i.log</fileNamePattern>
            <!-- 最多日志文件数，必须和CleanHistoryOnStart一起使用 -->
            <cleanHistoryOnStart>true</cleanHistoryOnStart>
            <!-- 日志保留天数,超过自动删除 -->
            <maxHistory>30</maxHistory>
            <!-- 日志保留最大大小,超过自动删除 -->
            <totalSizeCap>5GB</totalSizeCap>
            <!-- 日志文件单个大小,超过自动切割 -->
            <maxFileSize>100MB</maxFileSize>
        </rollingPolicy>
        <!-- 此日志文件只记录ERROR级别的 -->
        <!--<filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>info</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>-->
    </appender>
    <logger name="org.springframework" level="warn"/>
    <!--    <logger name="cn.com.ydc.common.snmp.task" level="debug"  additivity="false">
            <appender-ref ref="data_file" />
        </logger>-->
    <logger name="snmpJob" level="debug"  additivity="false">
        <appender-ref ref="snmp_job" />
    </logger>
    <logger name="collectLog" level="debug"  additivity="false">
        <appender-ref ref="log_collect" />
    </logger>
    <logger name="resultLog" level="debug"  additivity="false">
        <appender-ref ref="log_collect_result" />
    </logger>
    <logger name="tcpserverLog" level="debug"  additivity="false">
        <appender-ref ref="log_tcpserver" />
    </logger>

    <root level="info">
        <appender-ref ref="console"/>
        <appender-ref ref="debug_file"/>
        <appender-ref ref="info_file"/>
        <appender-ref ref="warn_file"/>
        <appender-ref ref="error_file"/>
    </root>

</configuration>